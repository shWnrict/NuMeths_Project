print("""
       __   __    __  .__   __.  _______                    _______. __    __       ___   ____    __    ____ .__   __. 
      |  | |  |  |  | |  \ |  | |   ____|     ___          /       ||  |  |  |     /   \  \   \  /  \  /   / |  \ |  | 
      |  | |  |  |  | |   \|  | |  |__       ( _ )        |   (----`|  |__|  |    /  ^  \  \   \/    \/   /  |   \|  | 
.--.  |  | |  |  |  | |  . `  | |   __|      / _ \/\       \   \    |   __   |   /  /_\  \  \            /   |  . `  | 
|  `--'  | |  `--'  | |  |\   | |  |____    | (_>  <   .----)   |   |  |  |  |  /  _____  \  \    /\    /    |  |\   | 
 \______/   \______/  |__| \__| |_______|    \___/\/   |_______/    |__|  |__| /__/     \__\  \__/  \__/     |__| \__| 
                                                         
 _______  _______  _______  _______  _______  _______  _______  _______  _______  _______  _______  _______  _______  _______  _______  
/______/\/______/\/______/\/______/\/______/\/______/\/______/\/______/\/______/\/______/\/______/\/______/\/______/\/______/\/______/\ 
\__::::\/\__::::\/\__::::\/\__::::\/\__::::\/\__::::\/\__::::\/\__::::\/\__::::\/\__::::\/\__::::\/\__::::\/\__::::\/\__::::\/\__::::\/

                                                      Shawn and Junni blabla iakw na magpaganda dito

                                                        [1]-PRELIMS bisection method
                                                        [2]-MIDTERMS secant method
                                                        [3]-FINALS asdasfg
             ______ ______ ______ ______ ______ ______ ______ ______ ______ ______ ______ ______ ______ ______ ______ 
            |______|______|______|______|______|______|______|______|______|______|______|______|______|______|______|
""")

import numpy as np

def prelim():
    print("""
          The subject matter for the Prelim period is about Bisection Method.
          Here is a recap for what bisection method is:

            ▪ The bisection method is one type of incremental search method in which the interval is always divided in half. 
            ▪ If a function changes sign over an interval, the function value at the midpoint is evaluated. 
            ▪ The location of the root is then determined as lying at the midpoint of the subinterval within which the sign change occurs. 
            ▪ The process is repeated to obtain refined estimates.
            ▪ Alternatively called binary chopping, interval halving, or Bolzano’s method,
          
            Advantages:
                  o Always convergent
                  o The root bracket gets halved with each iteration-guaranteed
          
            Disadvantages:
                  o Slow convergence
                  o If one of the initial guesses is close to the root, the convergence is slower
          


            Now, try Bisection Method with an example!
            Example Input: x**3 + 3*x - 5
          """)

    while True:
        try:
            def find_interval(f, x=0):
                """
                Try to find an interval where f changes sign.
                """
                if f(x) == 0:
                    return x, x
                elif f(x) > 0:
                    while f(x) > 0:
                        x -= 1
                    return x, x + 1
                else:
                    while f(x) < 0:
                        x += 1
                    return x - 1, x

            def interval_expression(x):
                return eval(expression)

            def bisection_method(f, x=0, tol=0.01, max_iter=100):
                a, b = find_interval(f, x)
                if a == b:
                    return a, 0, a, b, f(a), f(b), 0, 0, 0
                else:
                    iter_count = 1
                    while (abs(b - a) > tol) and (iter_count < max_iter):
                        c = (a + b) / 2.0
                        f_a = f(a)
                        f_b = f(b)
                        f_c = f(c)

                        print("{:<10} {:<10} {:<10} {:<10} {:<10} {:<10} {:<10} {:<10}".format(
                            iter_count, round(a, 4), round(b, 4), round(f_a, 4),
                            round(f_b, 4), round(c, 4), round(f_c, 4), round(b - a, 4)))

                        if f_a * f_c < 0:
                            b = c
                        else:
                            a = c

                        iter_count += 1

                    return (a + b) / 2.0, iter_count, a, b, f(a), f(b), c, f_c, b - a

            expression = input("Enter the function in terms of 'x': ")
            print(f"The equation is {expression}")
            print("{:<10} {:<10} {:<10} {:<10} {:<10} {:<10} {:<10} {:<10}".format("Iteration", "a", "b", "f(a)", "f(b)", "c=(a+b)/2", "f(c)", "b-a"))
            root, iterations, a, b, fa, fb, c, fc, ba = bisection_method(interval_expression)
            print("{:<10} {:<10} {:<10} {:<10} {:<10} {:<10} {:<10} {:<10}".format(
                            iterations, round(a, 4), round(b, 4), round(interval_expression(a), 4),
                            round(interval_expression(b), 4), round((a+b)/2, 4), round(interval_expression(root), 4), round(b - a, 4)))
            print(f"The interval where the function changes sign is {find_interval(interval_expression)}")
            print(f"The root of the function is approximately {root}, found in {iterations} iterations")
            print()


        except Exception as e:
            print(f"An error occurred: {e}")

        cont = input("Do you wish to continue with more examples? (y/n) ")
        print()
        if cont.lower() != 'y':
            break

def midterm():
    pass

def finals():
    pass

def menu():
    while True:
        print("""
        [1]-PRELIMS asdasddd iakw na din magpaganda dito
        [2]-MIDTERMS
        [3]-FINALS
        [4]-EXIT
        """)
        choice = int(input("Enter your choice: "))
        if choice == 1:
            prelim()
        elif choice == 2:
            midterm()
        elif choice == 3:
            finals()
        elif choice == 4:
            print("Exiting...")
            break
        else:
            print("Invalid choice. Please enter 1, 2, 3, or 4.")

menu()

